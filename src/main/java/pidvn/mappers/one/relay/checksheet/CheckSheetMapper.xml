<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pidvn.mappers.one.relay.checksheet.CheckSheetMapper">


    <resultMap id="getCheckSheetMaster-result"
               type="pidvn.modules.relay.checksheet.models.MasterVo">
        <result column="qa_card" property="qaCard" javaType="String"/>
        <result column="approve_by" property="approveBy" javaType="String"/>
        <result column="approve_by_name" property="approveByName" javaType="String"/>
        <result column="approve_status" property="approveStatus" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>
        <result column="checked_amount" property="checkedAmount" javaType="Integer"/>
        <result column="item_total" property="itemTotal" javaType="Integer"/>
        <result column="ok_total" property="okTotal" javaType="Integer"/>
        <result column="ng_total" property="ngTotal" javaType="Integer"/>
    </resultMap>

    <select id="getCheckSheetMaster" resultMap="getCheckSheetMaster-result">
        <![CDATA[
            with T01 as (
                -- Tính tổng số lượng hạng mục đã thực hiện checksheet
                SELECT M.*, count(D.id) checked_amount FROM cso_master M
                left join cso_detail D on M.id = D.master
                group by M.Id
            ),
            T02 as (
                -- Tính tổng số hạng mục
                select LP.line, count(I.Id) as item_total from cso_line_process LP
                left join cso_item I on LP.Process = I.Process
                group by LP.Line
            ),
            T03 as (
                select T01.*, ifnull(T02.item_total, 0) item_total from T01
                left join T02 on T01.line = T02.line
            ),
            T04 as (
                -- Tính số lượng OK NG
                    select A.master, sum(A.OK) ok_total, sum(A.NG) ng_total from (
                    select
                        D.master,
                        case
                            when D.evaluate = 'OK' then 1
                            else 0
                        end as OK,
                        case
                            when D.evaluate = 'NG' then 1
                            else 0
                        end as NG
                    from cso_detail D
                ) A
                group by A.master
            ),
            T05 as (
                select T03.*, ifnull(T04.ok_total, 0) ok_total , ifnull(T04.ng_total, 0) ng_total from T03
                left join T04 on T03.id = T04.master
            )
            select
                T05.*,
                (select U.name from users U where U.username = T05.approve_by) approve_by_name
            from T05
        ]]>
        where 1 = 1
        <if test="qaCard != null">
            and T05.qa_card '%' #{qaCard} '%'
        </if>
        <if test="line != null">
            and T05.line = #{line}
        </if>
        <if test="model != null">
            and T05.model like '%' #{model} '%'
        </if>
        <if test="shift != null">
            and T05.shift = #{shift}
        </if>
        <if test="approved != null">
            <if test="approved == 'YES'">
                and T05.approve_by is not null
            </if>
            <if test="approved == 'NO'">
                and T05.approve_by is null
            </if>
        </if>
        <if test="fromDate != null and toDate != null">
            and DATE_FORMAT(T05.created_at, '%Y-%m-%d') between DATE_FORMAT(#{fromDate}, '%Y-%m-%d') and DATE_FORMAT(#{toDate}, '%Y-%m-%d')
        </if>
        order by T05.created_at desc
    </select>

    <resultMap id="getProcesses-result"
               type="pidvn.modules.relay.checksheet.models.ProcessVo">
        <result column="checked_amount" property="checkedAmount" javaType="Integer"/>
        <result column="check_sheet_group" property="checkSheetGroup" javaType="Integer"/>
    </resultMap>
    <select id="getProcesses" resultMap="getProcesses-result">
        with T01 as (
            select I.process, count(I.id) as total from cso_item I group by I.process
        ),
        T02 as (
            select
                D.process, count(*) as checked_amount,
                if(sum(if(D.evaluate = 'OK', 0 , -1)) <![CDATA[<]]> 0 ,'NG','OK' ) as evaluate
            from cso_detail D
            where D.master = #{master}
            group by D.process
        ),
        T03 as (
            select T01.*, T02.evaluate, T02.checked_amount
            from T01
            left join T02 on T01.process = T02.process
        )
        select
            L.*, P.name, ifnull(T03.checked_amount, 0) as checked_amount,
            ifnull(T03.total, 0) as total, T03.evaluate, P.models, P.check_sheet_group
        from cso_line_process L
        left join T03 on L.process = T03.process
        left join cso_process P on L.process = P.id
        where L.line = #{line}
        <if test="model != null and model != 'undefined'" >
            <bind name="pattern" value="'%' + model + '%'" />
            and P.models like #{pattern}
        </if>

    </select>

    <resultMap id="getItems-result"
               type="pidvn.modules.relay.checksheet.models.ItemVo">
        <result column="type_name" property="typeName" javaType="String"/>
        <result column="unit_name" property="unitName" javaType="String"/>
        <result column="min_value" property="minValue" javaType="Float"/>
        <result column="max_value" property="maxValue" javaType="Float"/>
        <result column="actual_value" property="actualValue" javaType="String"/>
        <result column="employee_name" property="employeeName" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>
        <result column="updated_at" property="updatedAt" javaType="Date"/>
    </resultMap>
    <select id="getItems" resultMap="getItems-result">
        <![CDATA[
            with T01 as (
                select
                    I.id, I.name, I.type, T.name as type_name, I.unit, U.name as unit_name,
                    I.min_value, I.max_value, I.process
                from cso_item I
                left join cso_item_type T on I.type = T.id
                left join cso_item_unit U on I.unit = U.id
                where I.process = #{process}
                order by I.id asc
            ),
            T02 as (
                select * from cso_detail D
                where D.master = #{master} and D.process = #{process}
            )
            select
                T01.*, T02.id as detail, T02.master, T02.actual_value, T02.note,
                T02.created_at, T02.updated_at, T02.evaluate, T02.employee,
                (select U.name from users U where U.username = T02.employee) as employee_name
            from T01
            left join T02 on T01.id = T02.item
            order by T01.id asc
        ]]>
    </select>


    <resultMap id="getDetails-result"
               type="pidvn.modules.relay.checksheet.models.DetailVo">
        <result column="process_name" property="processName" javaType="String"/>
        <result column="item_name" property="itemName" javaType="String"/>
        <result column="item_type" property="itemType" javaType="String"/>
        <result column="item_unit" property="itemUnit" javaType="String"/>
        <result column="min_value" property="minValue" javaType="Float"/>
        <result column="max_value" property="maxValue" javaType="Float"/>
        <result column="actual_value" property="actualValue" javaType="String"/>
        <result column="employee_name" property="employeeName" javaType="String"/>
        <result column="created_at" property="createdAt" javaType="Date"/>

    </resultMap>
    <select id="getDetails" resultMap="getDetails-result">
        <![CDATA[
            with T01 as (
                select LP.line, P.id as process, P.name as process_name from cso_line_process LP
                inner join cso_process P on LP.process = P.id
            ),
            T02 as (
                select
                    T01.*, I.id as item, I.name as item_name, I.min_value, I.max_value,
                    U.name as item_unit, T.name as item_type
                from cso_item I
                right join T01 on I.process = T01.process
                left join cso_item_unit U on I.unit = U.id
                left join cso_item_type T on I.type = T.id
                where T01.line = #{line}
            ),
            T03 as (
                select
                    T02.*, D.master, D.actual_value, D.evaluate, D.employee, D.created_at, D.updated_at,
                    (select U.name from users U where U.username = D.employee ) as employee_name
                from T02
                left join cso_detail D on T02.item = D.item and T02.process = D.process and D.master = #{master}
            )
            select * from T03
        ]]>
    </select>

</mapper>